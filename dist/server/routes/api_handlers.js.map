{"version":3,"sources":["../../../src/server/routes/api_handlers.js"],"names":["db","loginPostedBusiness","req","rep","rows","cookieAuth","set","redirect","returnData","JSON","stringify","formatBusinessPayload","payload","password","undefined","hashedPass","helpBefore","add","postBusiness","hash","then","catch","getBusinesses","query","getResponses","getResources","postResponses","getQuestions"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;IAAYA,E;;AACZ;;;;;;AAEO,IAAMC,oDAAsB,SAAtBA,mBAAsB,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAc,gBAAc;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAC7DF,QAAIG,UAAJ,CAAeC,GAAf,CAAmB,6BAAWF,KAAK,CAAL,CAAX,CAAnB;AACA,WAAOD,IAAII,QAAJ,CAAa,GAAb,CAAP;AACD,GAHkC;AAAA,CAA5B;;AAKA,IAAMC,kCAAa,SAAbA,UAAa,CAACN,GAAD,EAAMC,GAAN;AAAA,SAAc;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WACtCD,IAAIM,KAAKC,SAAL,CAAeN,IAAf,CAAJ,CADsC;AAAA,GAAd;AAAA,CAAnB;;AAGA,IAAMO,wDAAwB,SAAxBA,qBAAwB;AAAA,SAAW;AAAA,wBAC3CC,OAD2C;AAE9CC,gBAAUC,SAFoC;AAG9CC,4BAH8C;AAI9CC,kBAAY,wBAASC,GAAT,CAAaL,QAAQI,UAArB,EAAiC,OAAjC;AAJkC;AAAA,GAAX;AAAA,CAA9B;;AAOA,IAAME,sCAAe,SAAfA,YAAe,CAAChB,GAAD,EAAMC,GAAN;AAAA,SAC1B,iBAAOgB,IAAP,CAAYjB,IAAIU,OAAJ,CAAYC,QAAxB,EAAkC,EAAlC,EACGO,IADH,CACQT,sBAAsBT,IAAIU,OAA1B,CADR,EAEGQ,IAFH,CAEQpB,GAAGkB,YAFX,EAGGE,IAHH,CAGQnB,oBAAoBC,GAApB,EAAyBC,GAAzB,CAHR,EAIGkB,KAJH,CAIS,8BAAYnB,GAAZ,EAAiBC,GAAjB,CAJT,CAD0B;AAAA,CAArB;;AAOA,IAAMmB,wCAAgB,SAAhBA,aAAgB,CAACpB,GAAD,EAAMC,GAAN;AAAA,SAC3BH,GAAGsB,aAAH,CAAiBpB,IAAIqB,KAArB,EACGH,IADH,CACQZ,WAAWN,GAAX,EAAgBC,GAAhB,CADR,EAEGkB,KAFH,CAES,8BAAYnB,GAAZ,EAAiBC,GAAjB,CAFT,CAD2B;AAAA,CAAtB;;AAKA,IAAMqB,sCAAe,SAAfA,YAAe,CAACtB,GAAD,EAAMC,GAAN;AAAA,SAC1BH,GAAGwB,YAAH,CAAgBtB,IAAIqB,KAApB,EACGH,IADH,CACQZ,WAAWN,GAAX,EAAgBC,GAAhB,CADR,EAEGkB,KAFH,CAES,8BAAYnB,GAAZ,EAAiBC,GAAjB,CAFT,CAD0B;AAAA,CAArB;;AAKA,IAAMsB,sCAAe,SAAfA,YAAe,CAACvB,GAAD,EAAMC,GAAN;AAAA,SAC1BH,GAAGyB,YAAH,GACGL,IADH,CACQZ,WAAWN,GAAX,EAAgBC,GAAhB,CADR,EAEGkB,KAFH,CAES,8BAAYnB,GAAZ,EAAiBC,GAAjB,CAFT,CAD0B;AAAA,CAArB;;AAKA,IAAMuB,wCAAgB,SAAhBA,aAAgB,CAACxB,GAAD,EAAMC,GAAN;AAAA,SAC3BH,GAAG0B,aAAH,CAAiBxB,IAAIU,OAArB,EACGQ,IADH,CACQZ,WAAWN,GAAX,EAAgBC,GAAhB,CADR,EAEGkB,KAFH,CAES,8BAAYnB,GAAZ,EAAiBC,GAAjB,CAFT,CAD2B;AAAA,CAAtB;;AAKA,IAAMwB,sCAAe,SAAfA,YAAe,CAACzB,GAAD,EAAMC,GAAN;AAAA,SAC1BH,GAAG2B,YAAH,GACGP,IADH,CACQZ,WAAWN,GAAX,EAAgBC,GAAhB,CADR,EAEGkB,KAFH,CAES,8BAAYnB,GAAZ,EAAiBC,GAAjB,CAFT,CAD0B;AAAA,CAArB","file":"api_handlers.js","sourcesContent":["import bcrypt from 'bcrypt';\nimport moment from 'moment';\nimport * as db from '../db/';\nimport { makeCookie, handleError } from './ui_handlers';\n\nexport const loginPostedBusiness = (req, rep) => ({ rows }) => {\n  req.cookieAuth.set(makeCookie(rows[0]));\n  return rep.redirect('/');\n};\n\nexport const returnData = (req, rep) => ({ rows }) =>\n  rep(JSON.stringify(rows));\n\nexport const formatBusinessPayload = payload => hashedPass => ({\n  ...payload,\n  password: undefined,\n  hashedPass,\n  helpBefore: moment().add(payload.helpBefore, 'weeks'),\n});\n\nexport const postBusiness = (req, rep) =>\n  bcrypt.hash(req.payload.password, 10)\n    .then(formatBusinessPayload(req.payload))\n    .then(db.postBusiness)\n    .then(loginPostedBusiness(req, rep))\n    .catch(handleError(req, rep));\n\nexport const getBusinesses = (req, rep) =>\n  db.getBusinesses(req.query)\n    .then(returnData(req, rep))\n    .catch(handleError(req, rep));\n\nexport const getResponses = (req, rep) =>\n  db.getResponses(req.query)\n    .then(returnData(req, rep))\n    .catch(handleError(req, rep));\n\nexport const getResources = (req, rep) =>\n  db.getResources()\n    .then(returnData(req, rep))\n    .catch(handleError(req, rep));\n\nexport const postResponses = (req, rep) =>\n  db.postResponses(req.payload)\n    .then(returnData(req, rep))\n    .catch(handleError(req, rep));\n\nexport const getQuestions = (req, rep) =>\n  db.getQuestions()\n    .then(returnData(req, rep))\n    .catch(handleError(req, rep));\n\n"]}